{"version":3,"sources":["assets\\script\\game.js"],"names":["cc","Class","Component","properties","starPrefab","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","highScoreDisplay","scoreAudio","AudioClip","gameOverUI","gameStart","isGameOver","startClick","active","startGame","getComponent","string","sys","localStorage","getItem","groundY","y","height","timer","starDuration","score","spawnNewStar","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","game","Math","random","randX","randY","jumpHeight","maxX","width","v2","start","update","dt","gameOver","gainScore","setItem","audioEngine","playEffect","stopAllActions","destroy","replayClick","director","loadScene"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // This property quotes the PreFab resource of stars\r\n        starPrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n\r\n        // The random scale of disappearing time for stars\r\n        maxStarDuration: 0,\r\n        minStarDuration: 0,\r\n\r\n        // Ground node for confirming the height of the generated star's position\r\n        ground: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n\r\n        // Player node for obtaining the jump height of the main character and controlling the movement switch of the main character\r\n        player: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        scoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        highScoreDisplay: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        gameOverUI: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        gameStart: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        isGameOver: false\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS: \r\n\r\n\r\n    startClick() {\r\n\r\n        this.gameStart.active = false;\r\n        this.startGame();\r\n\r\n    },\r\n\r\n    startGame() {\r\n        this.player.getComponent('player').startGame();\r\n        this.highScoreDisplay.string = 'HighScore: ' + cc.sys.localStorage.getItem('HighScore');\r\n        this.groundY = this.ground.y + this.ground.height / 2; // \"this.ground.top\" may also work\r\n        // Initialize timer\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        // Initialize scoring\r\n        this.score = 0;\r\n        // Generate a new star\r\n        this.spawnNewStar();\r\n    },\r\n\r\n    // onLoad () {},\r\n    // onLoad: function () {\r\n\r\n    //     // Obtain the anchor point of ground level on the y axis\r\n    //     this.groundY = this.ground.y + this.ground.height / 2; // \"this.ground.top\" may also work\r\n\r\n    //     // Initialize timer\r\n    //     this.timer = 0;\r\n    //     this.starDuration = 0;\r\n\r\n    //     // Initialize scoring\r\n    //     this.score = 0;\r\n\r\n    //     // Generate a new star\r\n    //     this.spawnNewStar();\r\n    //     //initializing scoring\r\n\r\n\r\n\r\n    // },\r\n\r\n    spawnNewStar: function () {\r\n        // Generate a new node in the scene with a preset template\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n        // Put the newly added node under the Canvas node\r\n        this.node.addChild(newStar);\r\n        // Set up a random position for the star\r\n        newStar.setPosition(this.getNewStarPosition());\r\n        // Save a reference of the Game object on the Star script component\r\n        newStar.getComponent('star').game = this;\r\n        // Reset timer, randomly choose a value according the scale of star duration\r\n        this.starDuration = this.minStarDuration + Math.random() * (this.maxStarDuration - this.minStarDuration);\r\n        this.timer = 0;\r\n    },\r\n\r\n    getNewStarPosition: function () {\r\n        var randX = 0;\r\n        // According to the position of the ground level and the main character's jump height, randomly obtain an anchor point of the star on the y axis\r\n        var randY = this.groundY + Math.random() * this.player.getComponent('player').jumpHeight + 50;\r\n        // According to the width of the screen, randomly obtain an anchor point of star on the x axis\r\n        var maxX = this.node.width / 2;\r\n        randX = (Math.random() - 0.5) * 2 * maxX;\r\n        // Return to the anchor point of the star\r\n        return cc.v2(randX, randY);\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {}\r\n    update: function (dt) {\r\n        // Update timer for each frame, when a new star is not generated after exceeding duration\r\n\r\n        // Invoke the logic of game failure\r\n        if (this.isGameOver) {\r\n            return;\r\n        }\r\n        if (this.timer > this.starDuration) {\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n\r\n    gainScore: function () {\r\n        this.score += 1;\r\n        // Update the words of the scoreDisplay Label\r\n        this.scoreDisplay.string = 'Score: ' + this.score;\r\n        if (this.score > cc.sys.localStorage.getItem('HighScore')) {\r\n            cc.sys.localStorage.setItem('HighScore', this.score)\r\n        }\r\n        this.highScoreDisplay.string = 'HighScore: ' + cc.sys.localStorage.getItem('HighScore');\r\n\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n    gameOver: function () {\r\n        // Stop the jumping action of the Player node\r\n        this.isGameOver = true;\r\n        this.player.stopAllActions();\r\n        this.player.destroy();\r\n        // reload the \"game\" scene\r\n        this.gameOverUI.active = true;\r\n    },\r\n\r\n\r\n    replayClick() {\r\n        cc.director.loadScene('game');\r\n    }\r\n});\r\n"]}